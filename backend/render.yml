databases:
  - name: keycloak-db
    plan: starter
    databaseName: users

  - name: app-db
    plan: starter
    databaseName: appdb

services:
  - type: private_service
    name: keycloak
    env: docker
    plan: starter
    docker:
      image: quay.io/keycloak/keycloak:23.0.7
      command: >
        start-dev --http-port=7080 --import-realm --health-enabled=true
    ports:
      - port: 7080
        protocol: tcp
    envVars:
      - key: KC_DB
        value: postgres
      - key: KC_DB_URL_HOST
        fromDatabase:
          name: keycloak-db
          property: host
      - key: KC_DB_URL_DATABASE
        fromDatabase:
          name: keycloak-db
          property: database
      - key: KC_DB_USERNAME
        fromDatabase:
          name: keycloak-db
          property: user
      - key: KC_DB_PASSWORD
        fromDatabase:
          name: keycloak-db
          property: password
      - key: KEYCLOAK_ADMIN
        value: admin
      - key: KEYCLOAK_ADMIN_PASSWORD
        value: admin
      - key: KC_HEALTH_ENABLED
        value: "true"
      - key: KC_LOG_LEVEL
        value: info

  - type: web
    name: app
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerContext: .
    ports:
      - port: 8100
        protocol: tcp
    envVars:
      - key: SERVER_PORT
        value: "8100"
      - key: SPRING_APPLICATION_NAME
        value: infra
      - key: SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI
        value: "http://keycloak:7080/realms/glimpse"
      - key: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI
        value: "http://keycloak:7080/realms/glimpse"
      - key: KEYCLOAK_BASE_URL
        value: "http://keycloak:7080"
      - key: KEYCLOAK_REALM
        value: glimpse
      - key: KEYCLOAK_CLIENT_ID
        value: aroundly
      - key: KEYCLOAK_CLIENT_SECRET
        value: aroundly-secret
      - key: SPRING_DATASOURCE_URL
        fromDatabase:
          name: app-db
          property: connectionString
      - key: SPRING_DATASOURCE_USERNAME
        fromDatabase:
          name: app-db
          property: user
      - key: SPRING_DATASOURCE_PASSWORD
        fromDatabase:
          name: app-db
          property: password
      - key: SPRING_FLYWAY_ENABLED
        value: "true"
      - key: SPRING_FLYWAY_LOCATIONS
        value: classpath:db/migration

  - type: private_service
    name: minio
    env: docker
    plan: starter
    docker:
      image: minio/minio
      command: server /data --console-address ":9001"
    ports:
      - port: 9000
        protocol: tcp
      - port: 9001
        protocol: tcp
    envVars:
      - key: MINIO_ROOT_USER
        value: admin
      - key: MINIO_ROOT_PASSWORD
        value: password
    disk:
      name: minio-data
      mountPath: /data
      sizeGB: 10

  - type: web
    name: grafana
    env: docker
    plan: starter
    docker:
      image: grafana/grafana-oss
    ports:
      - port: 3000
        protocol: tcp
    envVars:
      - key: GF_SECURITY_ADMIN_USER
        value: admin
      - key: GF_SECURITY_ADMIN_PASSWORD
        value: password
    disk:
      name: grafana-data
      mountPath: /var/lib/grafana
      sizeGB: 1

  - type: web
    name: pgadmin
    env: docker
    plan: starter
    docker:
      image: dpage/pgadmin4
    ports:
      - port: 80
        protocol: tcp
    envVars:
      - key: PGADMIN_DEFAULT_EMAIL
        value: admin@pgadmin.com
      - key: PGADMIN_DEFAULT_PASSWORD
        value: password
      - key: PGADMIN_LISTEN_PORT
        value: "80"
    disk:
      name: pgadmin-data
      mountPath: /var/lib/pgadmin
      sizeGB: 1
